#!/bin/bash

# Inspired by https://github.com/necolas/dotfiles/blob/master/bin/dotfiles
DOTFILES_DIRECTORY="${HOME}/.dotfiles"
DOTFILES_TARBALL_PATH="https://github.com/kewah/dotfiles/tarball/master"
DOTFILES_GIT_REMOTE="git@github.com:kewah/dotfiles.git"

# If missing, download and extract the dotfiles repository
if [[ ! -d ${DOTFILES_DIRECTORY} ]]; then
  printf "$(tput setaf 7)Downloading dotfiles...\033[m\n"
  mkdir ${DOTFILES_DIRECTORY}
  curl -fsSLo ${HOME}/dotfiles.tar.gz ${DOTFILES_TARBALL_PATH}
  tar -zxf ${HOME}/dotfiles.tar.gz --strip-components 1 -C ${DOTFILES_DIRECTORY}
  rm -rf ${HOME}/dotfiles.tar.gz
fi

source ${DOTFILES_DIRECTORY}/scripts/brew
source ${DOTFILES_DIRECTORY}/scripts/npm
source ${DOTFILES_DIRECTORY}/scripts/gem

type_exists() {
  if [ $(type -P $1) ]; then
    return 0
  fi
  return 1
}

is_git_repo() {
  $(git rev-parse --is-inside-work-tree &> /dev/null)
}

link() {
  # Force create/replace the symlink.
  ln -fs "${DOTFILES_DIRECTORY}/${1}" "${HOME}/${2}"
}

# Before relying on Homebrew, check that packages can be compiled
if ! type_exists "gcc"; then
  echo "The XCode Command Line Tools must be installed first."
  echo "  Download them from: https://developer.apple.com/downloads"
  exit 1
fi

# Check for Homebrew
if ! type_exists "brew"; then
  echo "Installing Homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# Check for git
if ! type_exists "git"; then
  echo "Updating Homebrew..."
  brew update
  echo "Installing Git..."
  brew install git
fi

sudo chown -R $USER /usr/local

brew_run

echo "Installing node & npm"
source $(brew --prefix nvm)/nvm.sh
nvm install 0.12.7
nvm use 0.12.7
nvm alias default 0.12.7

npm_run
gem_run

# Initialize the git repository if it's missing
if ! is_git_repo; then
  cd ${DOTFILES_DIRECTORY}
  echo "Initializing git repository..."
  git init
  git remote add origin ${DOTFILES_GIT_REMOTE}
  git fetch origin master
  git reset --hard FETCH_HEAD
  git clean -fd
  git submodule init
  git submodule update
fi

# Force remove the vim directory if it's already there.
if [ -e "${HOME}/.vim" ]; then
  rm -rf "${HOME}/.vim"
fi

link "dotfiles/agignore" ".agignore"
link "dotfiles/aliases" ".aliases"
link "dotfiles/esformatter" ".esformatter"
link "dotfiles/eslintrc" ".eslintrc"
link "dotfiles/gitconfig" ".gitconfig"
link "dotfiles/gitignore" ".gitignore"
link "dotfiles/gitmessage" ".gitmessage"
link "dotfiles/gvimrc" ".gvimrc"
link "dotfiles/inputrc" ".inputrc"
link "dotfiles/npmrc" ".npmrc"
link "dotfiles/tmux" ".tmux.conf"
link "dotfiles/vimrc" ".vimrc"
link "dotfiles/zshenv" ".zshenv"
link "dotfiles/zshrc" ".zshrc"
link "vim" ".vim"

if [ -e "${HOME}/.zfunctions" ]; then
  rm -rf "${HOME}/.zfunctions"
fi

mkdir "${HOME}/.zfunctions"

ln -fs "${DOTFILES_DIRECTORY}/zsh/themes/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" "${HOME}/.zfunctions/zsh-syntax-highlighting"

chsh -s /bin/zsh

source ${DOTFILES_DIRECTORY}/settings/osx
source ${DOTFILES_DIRECTORY}/settings/karabiner-import
