###########
#  UTILS  #
###########

snippet cons "console.log"
console.log($0)
endsnippet

snippet cv "console.logVar"
console.log('$1:', $0)
endsnippet

snippet prom "Promise" b
return new Promise((resolve, reject) => {
  ${VISUAL}$0
});
endsnippet

snippet im "import"
import ${1:name} from '${2:path}';
${VISUAL}$0
endsnippet

snippet => "lambda" w
(${1}) => {
  ${2}
};
endsnippet

snippet class "class"
class ${1:name} {
  constructor (${2}) {
    ${3}
  }
  $0
}
endsnippet

snippet if "if" b
if (${1}) {
  $0
}
endsnippet

#########
#  DOM  #
#########

snippet /(?<!^)adde/ "addEventListener" r
addEventListener('${1:type}', ${VISUAL}$0${2:, false});
endsnippet

snippet /^adde/ "addEventListener" r
${1:document}.addEventListener('${2:type}', ${VISUAL}$0${3:, false});
endsnippet

snippet /(?<!^)removee/ "removeEventListener" r
removeEventListener('${1:type}', ${VISUAL}$0${2:, false});
endsnippet

snippet /^removee/ "removeEventListener" r
${1:document}.removeEventListener('${2:type}', ${VISUAL}$0${3:, false});
endsnippet

snippet /(?<!^)query/ "querySelector" r
${1:document.}querySelector('${VISUAL}$0')
endsnippet

snippet /(?<!^)querya/ "querySelectorAll" r
${1:document.}querySelectorAll('${VISUAL}$0')
endsnippet

snippet prevent "preventDefault" b
e.preventDefault();
${VISUAL}$0
endsnippet

snippet propa "stopPropagation" b
e.stopPropagation();
${VISUAL}$0
endsnippet

snippet sett "setTimeout function"
setTimeout(() => {
  $0
}, 10);
endsnippet

snippet prot "protype" b
${1:class}.prototype.${2:method} = function(${3:arguments}) {
  ${VISUAL}$0
};
endsnippet

############
#  OBJECT  #
############

snippet _slice "Array.prototype.slice" b
var _slice = Array.prototype.slice;
endsnippet

snippet _has "Object.prototype.hasOwnProperty" b
var _has = Object.prototype.hasOwnProperty;
endsnippet

snippet typeb "typeof boolean" w
typeof ${0:var} === 'boolean'
endsnippet

snippet typen "typeof number" w
typeof ${0:var} === 'number'
endsnippet

snippet typef "typeof function" w
typeof ${0:var} === 'function'
endsnippet

snippet typeo "typeof object" w
typeof ${0:var} === 'object'
endsnippet

snippet types "typeof string" w
typeof ${0:var} === 'string'
endsnippet

snippet typeu "typeof undefined" w
typeof ${0:var} === 'undefined'
endsnippet
