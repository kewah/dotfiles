" vim:foldmethod=marker:foldlevel=0

let mapleader=","

source ~/.vim/plugins.vim

" Section General {{{

scriptencoding utf-8

set nocompatible	    " not compatible with vi
set autoread		      " detect when a file is changed
set history=1000	    " change history to 1000
set nobackup
set noswapfile

set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

set encoding=utf-8
set formatprg=par

" }}}

" Section User Interface {{{

if &term =~ '256color'
  set t_ut=   " disable background color erase
endif

" enable 24 bit color support if supported
if (has("termguicolors"))
  set termguicolors
endif

syntax on
colorscheme OceanicNext		" Set the colorscheme

if has("gui_running")
  set guifont=Ubuntu\ Mono\ derivative\ Powerline\ Nerd\ Font\ Complete\ Mono:h14
  set linespace=3
  set guioptions=     " Remove all extra UI from macvim
  set gcr=a:blinkon0  " Turn off the blinking cursor in normal mode
  hi MatchParen guibg=NONE guifg=yellow gui=bold    " Change the bracket highlight
endif

if has('mouse')
  set mouse=a
endif

set number		        " show line numbers
set relativenumber	  " show relative line numbers

set wrap		          " turn on line wrapping
set wrapmargin=8	    " wrap lines when coming within n characters from side
set linebreak		      " set soft wrapping
set showbreak=…		    " show ellipsis at breaking

set autoindent		    " automatically set indent of new line
set smartindent

" toggle invisible characters
set nolist
set listchars=tab:→\ ,eol:¬,trail:⋅,extends:❯,precedes:❮
set showbreak=↪

" highlight conflicts
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

" make backspace behave in a sane manner
set backspace=indent,eol,start

" Tab control
set expandtab		      " Expand TABs to spaces
set smarttab		      " tab respects 'tabstop', 'shiftwidth', and 'softtabstop'
set tabstop=2		      " the visible width of tabs
set softtabstop=2	    " edit as if the tabs are 4 characters wide
set shiftwidth=2	    " number of spaces to use for indent and unindent
set shiftround		    " round indent to a multiple of 'shiftwidth'
set completeopt-=preview

" code folding settings
set foldmethod=syntax	  " fold based on indent
set foldnestmax=10	    " deepest fold is 10 levels
set nofoldenable	      " don't fold by default
set foldlevel=1
let javaScript_fold=1

set clipboard=unnamed

" Remove delay between modes
set timeout
set timeoutlen=1000	  " Wait {num} ms before timing out a mapping
set ttimeoutlen=0	    " Wait {num} ms to change mode

set ttyfast		        " faster redrawing
set lazyredraw
set synmaxcol=256

set diffopt+=vertical
set laststatus=2	    " show the satus line all the time
set so=7		          " set 7 lines to the cursors - when moving vertical
set hidden		        " current buffer can be put into background
set showcmd		        " show incomplete commands
set noshowmode		    " don't show which mode disabled for PowerLine
set scrolloff=3		    " lines of text around cursor
set shell=$SHELL
set cmdheight=1		    " command bar height
set title		          " set terminal title

" Wild settings
set wildchar=<TAB>	  " Character for CLI expansion (TAB-completion).
set wildmenu		      " enhanced command line completion
set wildmode=full	    " autocomplete menu like ZSH
set wildignore=""	    " reset
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem " Disable output and VCS files
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz " Disable archive files
set wildignore+=*/.sass-cache/* " Ignore sass cache
set wildignore+=*/.settings/* " Ignore settings folders
set wildignore+=*.pyc " Python byte code
set wildignore+=*.swp,*~,._* " Ignore temp and backup files
set wildignore+=*.png,*.jpg,*.jpeg,*.gif,*.psd,*.tiff,*.swf,*.fla " Ignore image files
set wildignore+=*.DS_Store " Ignore .DS_Store files
set wildignore+=*.ogg,*.mp3,*.aac " Ignore sound files

" Searching
set ignorecase		  " case insensitive searching
set smartcase		    " case-sensitive if expresson contains a capital letter
set hlsearch		    " highlight search results
set incsearch		    " set incremental search, like modern browsers
set nolazyredraw	  " don't redraw while executing macros

set magic		    " Set magic on, for regex

set showmatch		" show matching braces

set splitbelow    " Open new split panes at the bottom
set splitright    " Open new split panes on the right

" error bells
set noerrorbells
set visualbell
set t_vb=
set tm=500

set formatprg=par

" }}}

" Section Mappings {{{

" remap esc
inoremap jk <esc>

" No more help key.
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" No Ex mode (see :help Q)
nnoremap Q <nop>

" Mapping semicolon to colon for quicker colon commands
noremap ; :
noremap : ;

nnoremap ! :!
" Quickly move to the beginning or end of a line
nnoremap H ^
nnoremap L $

" Indent
nnoremap <Tab> >>_
nnoremap <S-Tab> <<_
inoremap <S-Tab> <C-D>
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

" moving up and down work as you would expect
nnoremap <silent> j gj
nnoremap <silent> k gk
nnoremap <silent> ^ g^
nnoremap <silent> $ g$

" Center search matches
nnoremap n nzzzv
nnoremap N Nzzzv

" Quick yanking to the end of the line
nmap Y y$

" Select just-pasted text
nnoremap gp `[v`]

" add a blank line below or above and keep the cursor in place
nmap <S-Return> O<Esc>j
nmap <CR> o<Esc>k

" Insert a new link before/after (like ST)
imap <D-Return> <C-o>o
imap <S-Return> <C-o>O

" Speed up viewport scrolling
nnoremap <C-e> 4<C-e>
nnoremap <C-y> 4<C-y>

" Search
nnoremap <silent> <leader><space> :noh<cr>

" Indent inner curly braces
nmap <leader>i =iB<C-o>

" Better split switching (Ctrl-j, Ctrl-k, Ctrl-h, Ctrl-l)
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Change window panel layout
map <leader>wh <C-w>t<C-w>H   " to horizontal
map <leader>wv <C-w>t<C-w>K   " to vertical

" leader+1...9 = go to that tab
map <silent> <leader>1 1gt
map <silent> <leader>2 2gt
map <silent> <leader>3 3gt
map <silent> <leader>4 4gt
map <silent> <leader>5 5gt
map <silent> <leader>6 6gt
map <silent> <leader>7 7gt
map <silent> <leader>8 8gt
map <silent> <leader>9 9gt

" Auto indent with a new line
imap <C-Return> <CR><CR><C-o>k<Tab>

" automatically expands to the path of the active buffer
cnoremap %% <C-R>=fnameescape(expand('%:h')).'/'<cr>
noremap <leader>oe :e %%
noremap <leader>os :sp %%
noremap <leader>ov :vsp %%
noremap <leader>ot :tabe %%

" open the file under the cursor in a vertical panel
nnoremap <leader>of <C-w>f<C-w>L

" }}}
