#!/bin/zsh

setopt hist_ignore_space
setopt hist_ignore_all_dups

# Completion
autoload -U compinit && compinit
setopt auto_cd
setopt no_case_glob  # set ignore case for ls etc
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'   # case insensitive completion for cd etc *N*
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# load our own completion functions
fpath=(
  "/usr/local/share/zsh-completions"
  "/usr/local/share/zsh/site-functions"
  "$HOME/.zfunctions"
  $fpath
)

# Prompt theme
autoload -U promptinit && promptinit
prompt pure

PURE_GIT_PULL=0

# add some readline keys back
bindkey "^A" beginning-of-line
bindkey "^E" end-of-line

# Replace all occurances
function substitute {
  if [ -z "$1" -o -z "$2" ]; then
    echo "Usage: substitue FROM_STRING TO_STRING [OPTION]..."
    echo
    echo "Replace all occurances of FROM_STRING (a sed-compatible regular"
    echo "expression) with TO_STRING in all files for which ack matches"
    echo "FROM_STRING."
    echo
    echo "Any additional options are passed directly to ack-grep (e.g.,"
    echo " --type=html would only run the substitution on html files)."
    return 1
  fi

  # Escape forward slashes for sed
  FROM_STRING=${1//\//\\/}
  TO_STRING=${2//\//\\/}
  shift 2
  ack -l "$1" | xargs perl -pi -E "s/$FROM_STRING/$TO_STRING/g"
}

function md {
  mkdir -p $1 && cd $1
}

function npmls() {
  npm ls --depth=0 "$@" 2>/dev/null
}

function bigup() {
  bash "$HOME/.dotfiles/update" $@
}

function gi() {
  curl http://www.gitignore.io/api/$@
}

function cvenv() {
  virtualenv -p $(which python3) --no-site-packages --no-wheel venv
}

function avenv() {
  source venv/bin/activate
}

function rmpyc() {
  find . -name '*.pyc' -delete
}

function babelmon() {
  nodemon --exec babel-node --stage 0 -- $@
}

# By Moox: https://github.com/MoOx/dotfiles/blob/master/components/node/functions/npmpublish
# `npmpublish` with an optional argument `patch`/`minor`/`major`/`<version>`
# defaults to `patch`
function npmpublish() {
  git pull --rebase && \
  rm -rf node_modules && \
  npm install && \
  npm test && \

  mversion ${1:=patch} -m -n && \

  npm publish && \

  git push origin master && \
  git push origin master --tags
}

function bump() {
  git pull --rebase && \
  rm -rf node_modules && \
  npm install && \
  npm test && \

  mversion ${1:=patch} -m -n && \

  git push origin master && \
  git push origin master --tags
}

export LSCOLORS="exfxcxdxbxbxbxbxbxbxbx"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

source $HOME/.zfunctions/zsh-syntax-highlighting

# z(1)
. /usr/local/etc/profile.d/z.sh

# NVM
source ~/.nvm/nvm.sh

# aliases
[[ -f ~/.aliases ]] && source ~/.aliases

# Local config
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

# added by travis gem
[ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh
